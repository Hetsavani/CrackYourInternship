class Solution {
    public int maxScore(int[] cardPoints, int k) {
        int sum = 0;
        // int i = 0;
        // int j = cardPoints.length-1;
        int n = cardPoints.length;
        int prefix_sum[] = new int[n];
        prefix_sum[0] = cardPoints[0];
        for(int i = 1;i<n;i++){
            prefix_sum[i] = prefix_sum[i-1]+cardPoints[i];
        }
        // System.out.println(Arrays.toString(prefix_sum));
        if(k >= n) return prefix_sum[n-1];
        int max = 0;
        for(int i=1;i+(n-k-1)<n;i++){
            int temp = prefix_sum[n-1]-(prefix_sum[i+(n-k)-1]-prefix_sum[i-1]);
            max = (int)Math.max(max,temp);
        }
        int temp = prefix_sum[n-1]-prefix_sum[(n-k)-1];
        max = (int)Math.max(max,temp);
        return max;
        // while(k>0){
        //     if(cardPoints[i] > cardPoints[j]){
        //         sum += cardPoints[i];
        //         i++;
        //     }else{
        //         sum += cardPoints[j];
        //         j--;
        //     }
        //     k--;
        // }
        // return sum;
    }
}
