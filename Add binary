class Solution {
    public String addBinary(String a, String b) {
        StringBuilder sb = new StringBuilder();
        int carry = 0;
        int i = a.length() - 1;
        int j = b.length() - 1;

        while (i >= 0 || j >= 0 || carry == 1) {
            if(i >= 0)
                carry += a.charAt(i--) - '0';
            if(j >= 0)
                carry += b.charAt(j--) - '0';
                sb.append(carry % 2);
                carry /= 2;
            }
            return sb.reverse().toString();
        }
    //  ERROR FOR LARGE INPUT STRING //
    // public String addBinary(String a, String b) {
    //     long num1 = Integer.parseInt(a, 2); 
    //     long num2 = Integer.parseInt(b, 2); 
    //     return Long.toBinaryString(num1+num2);
    // }
    
        // StringBuilder binaryStr = new StringBuilder();
        // while (decimalNum > 0) {
        //     binaryStr.insert(0, decimalNum % 2);
        //     decimalNum /= 2;
        // }
        // return Integer.toString(num);
        // int num = a1+b1;
        // String ans = Integer.toString(num);
        // for(int i=num.length-1;i>=0;i++){
        //     if(ans.charAt(i)=='2'){
        //         ans.charAt(i) = '0';
        //         ans.charAt(i+1) = char(Integer.parseInt(ans.charAt(i).toString())+1);
        //     }else if(ans.charAt(i)=='3'){
        //         ans.charAt(i) = '1';
        //         ans.charAt(i+1) = char(Integer.parseInt(ans.charAt(i))+1);
        //     }
        // }
}
// int a1 = Integer.parseInt(a);
        // int b1 = Integer.parseInt(b);
        // int num1 = 0;
        // int i=0;
        // while(a1>0){
        //     num1 = (int)num1*(int)Math.pow(2,i) + (int)a1%10;
        //     a1 = a1/10;
        //     i++;
        // }
        // int num2 = 0;
        // int j=0;
        // while(b1>0){
        //     num2 = (int)num2*(int)Math.pow(2,j) + (int)b1%10;
        //     b1 = b1/10;
        //     j++;
        // }
        // int decimalNum = num1+num2;
        // int num = decimalNum;
        // if (decimalNum == 0) {
        //     return "0";
        // }
