class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        int target = 0;
        Arrays.sort(nums);
        Set<List<Integer>> s = new HashSet<>();
        List<List<Integer>> output = new ArrayList<>();
        for (int i = 0; i < nums.length; i++){
            int j = i + 1;
            int k = nums.length - 1;
            while (j < k) {
                int sum = nums[i] + nums[j] + nums[k];
                if (sum == target) {
                    s.add(Arrays.asList(nums[i], nums[j], nums[k]));
                    j++;
                    k--;
                } else if (sum < target) {
                    j++;
                } else {
                    k--;
                }
            }
        }
        output.addAll(s);
        return output;
    
        // // Arrays.sort(nums);
        // Set<List<Integer>> set = new HashSet();
        // int target = 0;
        //     int count=0;
        //     for(int x=0;x<nums.length;x++){
        //         int y = x+1;
        //         int z = nums.length-1;
        //         while(y<z){
        //             int sum = nums[x]+nums[y] + nums[z];
        //             if(sum==target){
        //                 set.add(Arrays.asList(nums[x],nums[y],nums[z]));
        //                 y++;
        //                 z--;
        //             }
        //             else if(sum<target){
        //                 y++;
        //             }else{
        //                 z--;
        //             }
        //         }
        //             // int sum = ;
        //             // for(int z =0;z<nums.length;z++){
        //             //     if(nums[x]+nums[y] + nums[z] == 0 && x!=y && y!=z && x!=z){
        //             //         List<Integer> temp = new LinkedList<>();
        //             //         temp.add(nums[x]);
        //             //         temp.add(nums[y]);
        //             //         temp.add(nums[z]);
        //             //         Collections.sort(temp);
        //             //         set.add(temp);
        //             //     }
        //             // }
        //             // for(int z=y+1;z<nums.length;z++){
        //             //     if((int)Math.abs(nums[x]+nums[y]) == arr[z]){
        //             //          List<Integer> temp = new ArrayList<>();
        //             //         temp.add(nums[x]);
        //             //         temp.add(nums[y]);
        //             //         temp.add(nums[z]);
        //             //         count++;
        //             //         set.add(temp);
        //             //         break;
        //             //     }
        //             // }
        //             //if(count!=0){
        //             //        break;
        //             //}
        //         // if(count!=0){
        //         //     continue;
        //         // }
                
        //     }
        // List<List<Integer>> list = new ArrayList<>(set);
        // return list;
    }
}
